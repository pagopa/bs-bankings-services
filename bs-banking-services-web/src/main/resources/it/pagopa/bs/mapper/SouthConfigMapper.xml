<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="it.pagopa.bs.web.mapper.SouthConfigMapper">

    <resultMap id="config" type="it.pagopa.bs.checkiban.model.persistence.SouthConfig">
        <id column="scf_id" property="southConfigId" />
        <result column="scf_code" property="southConfigCode" />
        <result column="scf_description" property="description" />
        <result column="scf_connector_name" property="connectorName" />
        <result column="scf_connector_type" property="connectorType" />
        <result column="scf_model_version" property="modelVersion" />
        <result column="scf_model_config" property="modelConfig" />
        <result column="scf_created_datetime" property="createdDatetime" />
        <result column="scf_updated_datetime" property="updatedDatetime" />

        <result column="RESULT_COUNT" property="resultCount" />
    </resultMap>

    <select id="searchPspApiStandard" resultMap="config">
        SELECT sc.*, COUNT(DISTINCT sc.scf_id) OVER() AS RESULT_COUNT
        FROM pagopa_ma_south_config sc
        <where>
            <include refid="pspApiStandardSearchFilters">
                <property name="__prefix" value="sc."/>
                <property name="__field" value="filter"/>
            </include>
        </where>
        <include refid="CoreUtils.multipleSorting">
            <property name="__prefix" value="sc."/>
        </include>
        <include refid="CoreUtils.pagination" />
    </select>

    <sql id="pspApiStandardSearchFilters">
        AND ${__prefix}scf_is_deleted = 0
        AND ${__prefix}scf_connector_type = 'PSP_API_STANDARD'
        <if test="${__field} != null">
            <include refid="commonSearchFilters" />
            <if test="${__field} instanceof it.pagopa.bs.checkiban.model.api.request.config.south.api.SearchPspApiStandardSouthConfigRequest">
                <if test="${__field}.modelConfig != null">
                    <include refid="CoreUtils.fieldSearchCondition">
                        <property name="__column" value="${__prefix}scf_model_config.southPath"/>
                        <property name="__filter" value="${__field}.modelConfig.southPath"/>
                    </include>
                </if>
            </if>
        </if>
    </sql>

    <select id="searchPspBatchStandard" resultMap="config">
        SELECT sc.*, COUNT(DISTINCT sc.scf_id) OVER() AS RESULT_COUNT
        FROM pagopa_ma_south_config sc
        <where>
            <include refid="pspBatchStandardSearchFilters">
                <property name="__prefix" value="sc."/>
                <property name="__field" value="filter"/>
            </include>
        </where>
        <include refid="CoreUtils.multipleSorting">
            <property name="__prefix" value="sc."/>
        </include>
        <include refid="CoreUtils.pagination" />
    </select>

    <sql id="pspBatchStandardSearchFilters">
        AND ${__prefix}scf_is_deleted = 0
        AND ${__prefix}scf_connector_type = 'PSP_BATCH_STANDARD'
        <if test="${__field} != null">
            <include refid="commonSearchFilters" />
            <if test="${__field} instanceof it.pagopa.bs.checkiban.model.api.request.config.south.batch.SearchPspBatchStandardSouthConfigRequest">
                <if test="${__field}.modelConfig != null">
                    <include refid="CoreUtils.rangeSearchCondition">
                        <property name="__column" value="${__prefix}scf_model_config.maxRecords"/>
                        <property name="__filter" value="${__field}.modelConfig.maxRecords"/>
                    </include>
                    <include refid="CoreUtils.rangeSearchCondition">
                        <property name="__column" value="${__prefix}scf_model_config.writeCutoffTime"/>
                        <property name="__filter" value="${__field}.modelConfig.writeCutoffTime"/>
                    </include>
                    <include refid="CoreUtils.rangeSearchCondition">
                        <property name="__column" value="${__prefix}scf_model_config.readCutoffTime"/>
                        <property name="__filter" value="${__field}.modelConfig.readCutoffTime"/>
                    </include>
                </if>
            </if>
        </if>
    </sql>

    <select id="searchServiceProviderApiStandard" resultMap="config">
        SELECT sc.*, COUNT(DISTINCT sc.scf_id) OVER() AS RESULT_COUNT
        FROM pagopa_ma_south_config sc
        <where>
            <include refid="serviceProviderApiStandardSearchFilters">
                <property name="__prefix" value="sc."/>
                <property name="__field" value="filter"/>
            </include>
        </where>
        <include refid="CoreUtils.multipleSorting">
            <property name="__prefix" value="sc."/>
        </include>
        <include refid="CoreUtils.pagination" />
    </select>

    <sql id="serviceProviderApiStandardSearchFilters">
        AND ${__prefix}scf_is_deleted = 0
        AND ${__prefix}scf_connector_type = 'SERVICE_PROVIDER_API_STANDARD'
        <if test="${__field} != null">
            <include refid="commonSearchFilters" />
            <if test="${__field} instanceof it.pagopa.bs.checkiban.model.api.request.config.south.cobadge.SearchServiceProviderApiStandardSouthConfigRequest">
                <if test="${__field}.modelConfig != null">
                    <include refid="CoreUtils.fieldSearchCondition">
                        <property name="__column" value="${__prefix}scf_model_config.southPath"/>
                        <property name="__filter" value="${__field}.modelConfig.southPath"/>
                    </include>
                    <include refid="jsonBooleanSearchCondition">
                        <property name="__column" value="${__prefix}scf_model_config.hasGenericSearch"/>
                        <property name="__filter" value="${__field}.modelConfig.hasGenericSearch"/>
                    </include>
                    <include refid="jsonBooleanSearchCondition">
                        <property name="__column" value="${__prefix}scf_model_config.isPrivative"/>
                        <property name="__filter" value="${__field}.modelConfig.isPrivative"/>
                    </include>
                    <include refid="jsonBooleanSearchCondition">
                        <property name="__column" value="${__prefix}scf_model_config.isActive"/>
                        <property name="__filter" value="${__field}.modelConfig.isActive"/>
                    </include>
                    <include refid="jsonBooleanSearchCondition">
                        <property name="__column" value="${__prefix}scf_model_config.isMock"/>
                        <property name="__filter" value="${__field}.modelConfig.isMock"/>
                    </include>
                </if>
            </if>
        </if>
    </sql>

    <sql id="jsonBooleanSearchCondition">
        <if test="${__filter} != null">
            <choose>
                <!-- equals -->
                <when test="${__filter}.equals != null">
                    <choose>
                        <when test="${__filter}.equals == true">
                            AND ${__column} = 'true'
                        </when>
                        <otherwise>
                            AND ${__column} = 'false'
                        </otherwise>
                    </choose>
                </when>
                <!-- empty -->
                <when test="${__filter}.empty != null">
                    <if test="${__filter}.empty">
                        AND ${__column} IS NULL
                    </if>
                    <if test="not ${__filter}.empty">
                        AND ${__column} IS NOT NULL
                    </if>
                </when>
            </choose>
        </if>
    </sql>

    <sql id="commonSearchFilters">
        <if test="${__field} != null">
            <include refid="CoreUtils.fieldSearchCondition">
                <property name="__column" value="${__prefix}scf_id"/>
                <property name="__filter" value="${__field}.southConfigId"/>
            </include>
            <include refid="CoreUtils.fieldSearchCondition">
                <property name="__column" value="${__prefix}scf_code"/>
                <property name="__filter" value="${__field}.southConfigCode"/>
            </include>
            <include refid="CoreUtils.fieldSearchCondition">
                <property name="__column" value="${__prefix}scf_description"/>
                <property name="__filter" value="${__field}.description"/>
            </include>
            <include refid="CoreUtils.fieldSearchCondition">
                <property name="__column" value="${__prefix}scf_connector_name"/>
                <property name="__filter" value="${__field}.connectorName"/>
            </include>
            <include refid="CoreUtils.rangeSearchCondition">
                <property name="__column" value="${__prefix}scf_model_version"/>
                <property name="__filter" value="${__field}.modelVersion"/>
            </include>
            <include refid="CoreUtils.rangeSearchCondition">
                <property name="__column" value="${__prefix}scf_updated_datetime"/>
                <property name="__filter" value="${__field}.updatedDatetime"/>
            </include>
            <include refid="CoreUtils.rangeSearchCondition">
                <property name="__column" value="${__prefix}scf_created_datetime"/>
                <property name="__filter" value="${__field}.createdDatetime"/>
            </include>
        </if>
    </sql>

    <insert id="createOne" useGeneratedKeys="true" keyProperty="southConfigId" keyColumn="scf_id">
        INSERT INTO pagopa_ma_south_config
        (
            scf_id,
            scf_code,
            scf_description,
            scf_connector_name,
            scf_connector_type,
            scf_model_version,
            scf_model_config
        )
        VALUES
        (
            PAGOPA_SQ_SCF_ID.nextval,
            #{config.southConfigCode},
            #{config.description},
            #{config.connectorName},
            #{config.connectorType},
            #{config.modelVersion},
            #{config.modelConfig}
        )
    </insert>

    <select id="getOneById" resultMap="config">
        SELECT * FROM pagopa_ma_south_config
        WHERE scf_id = #{southConfigId}
        AND scf_is_deleted = 0
    </select>

    <select id="getOneByIdAndConnectorType" resultMap="config">
        SELECT * FROM pagopa_ma_south_config
        WHERE scf_id = #{southConfigId}
        AND scf_connector_type = #{connectorType}
        AND scf_is_deleted = 0
    </select>

    <select id="getOneByCode" resultMap="config">
        SELECT * FROM pagopa_ma_south_config
        WHERE scf_code = #{southConfigCode}
        AND scf_is_deleted = 0
    </select>

    <update id="updateOne" flushCache="true">
        UPDATE pagopa_ma_south_config
        <set>
            scf_updated_datetime = CURRENT_TIMESTAMP,
            <if test="config.description != null and config.description != ''">
                scf_description = #{config.description},
            </if>
            <if test="config.connectorName != null and config.connectorName != ''">
                scf_connector_name = #{config.connectorName},
            </if>
            <if test="config.modelVersion != null and config.modelVersion != ''">
                scf_model_version = #{config.modelVersion},
            </if>
            <if test="config.modelConfig != null and config.modelConfig != ''">
                scf_model_config = #{config.modelConfig},
            </if>
        </set>
        WHERE scf_id = #{southConfigId}
        AND scf_is_deleted = 0
    </update>

    <update id="deleteOneById">
        UPDATE pagopa_ma_south_config
        SET
            scf_is_deleted = 1,
            scf_deleted_datetime = CURRENT_TIMESTAMP
        WHERE scf_id = #{southConfigId}
        AND scf_is_deleted = 0
    </update>

    <select id="getAllByConnectorTypeAlsoDeleted" resultMap="config">
        SELECT * FROM pagopa_ma_south_config
        WHERE scf_connector_type = #{connectorType}
    </select>

    <select id="getOneByCodeAlsoDeleted" resultMap="config">
        SELECT * FROM pagopa_ma_south_config
        WHERE scf_code = #{connectorCode}
    </select>

</mapper>