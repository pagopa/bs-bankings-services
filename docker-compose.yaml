version: '3'
name: bs-banking-services
services:

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    hostname: zookeeper
    container_name: zookeeper
    healthcheck:
      test: nc -z localhost 2181 || exit -1
      interval: 10s
      timeout: 5s
      retries: 3
    environment:
      ZOO_MY_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    hostname: kafka
    healthcheck:
      test: "kafka-topics --bootstrap-server kafka:9092 --describe --topic bs.pagopa.checkiban.reports"
      interval: 5s
      timeout: 10s
      retries: 30
      start_period: 20s
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    depends_on:
      zookeeper:
        condition: service_healthy
  
  kafka-init:
    image: confluentinc/cp-kafka:latest
    container_name: kafka-init
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      # blocks until kafka is reachable
      kafka-topics --bootstrap-server kafka:9092 --list

      echo -e 'Creating kafka topics'
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic bs.pagopa.checkiban.reports

      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server kafka:9092 --list
      "
    depends_on:
      zookeeper:
        condition: service_healthy
      kafka:
        condition: service_started
    init: true

  hazelcast:
    image: hazelcast/hazelcast:4.2.6
    container_name: hazelcast
    restart: unless-stopped
    environment:
      HZ_CLUSTERNAME: pagopa
    ports:
      - 5701:5701
      - 5702:5702

  aws-mock:
    image: motoserver/moto:latest
    container_name: aws-mock
    restart: unless-stopped
    ports:
      - 5000:5000
    
  oracle:
    image: gvenzl/oracle-xe:21-slim-faststart
    container_name: oracle
    restart: unless-stopped
    environment:
      ORACLE_DATABASE: bs
      ORACLE_PASSWORD: test
    healthcheck:
      test: "cat /opt/oracle/diag/rdbms/xe/XE/alert/log.xml | grep 'Pluggable database BS opened read write' || exit 1"
      interval: 10s
      timeout: 5s
      retries: 50
    volumes:
      - ./schema:/container-entrypoint-initdb.d
    ports:
      - 1521:1521
    
  backend:
    container_name: bs-backend
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      AWS_ACCESS_KEY_ID: 'mock'
      AWS_SECRET_ACCESS_KEY: 'mock'
      AWS_SECURITY_TOKEN: 'mock'
      AWS_SESSION_TOKEN: 'mock'
      AWS_DEFAULT_REGION: 'us-east-1'
    ports:
      - 8080:8080
      - 5005:5005
    depends_on:
      kafka:
        condition: service_healthy
      oracle:
        condition: service_healthy
      hazelcast:
        condition: service_started
      aws-mock:
        condition: service_started
